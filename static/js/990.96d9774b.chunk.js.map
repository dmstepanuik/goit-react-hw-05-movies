{"version":3,"file":"static/js/990.96d9774b.chunk.js","mappings":"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","sources":["components/common/MovieList/MovieItem/MovieItem.jsx","components/common/MovieList/MovieList.jsx","components/common/SearchForm/SearchForm.jsx","components/pages/Movies/Movies.jsx","hooks/useFirstRender.js","hooks/useTrendingApi.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function MovieItem({ id, title }) {\n  const location = useLocation();\n  // const navigate = useNavigate();\n  // console.dir(navigate);\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  );\n}\n","import React from 'react';\nimport MovieItem from './MovieItem/MovieItem';\n\nexport default function MovieList({ movies }) {\n  return (\n    <ul>\n      {movies.map(movie => {\n        return <MovieItem key={movie.id} title={movie.title} id={movie.id} />;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport default function SearchForm({ setSearch }) {\n  function onSubmit(e) {\n    e.preventDefault();\n    const form = e.target;\n    const value = form.elements.search.value.trim().toLowerCase();\n\n    if (value === '') return;\n\n    setSearch(value);\n    form.reset();\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        <input name=\"search\" type=\"text\" />\n      </label>\n      <button type=\"sumbit\">Search</button>\n    </form>\n  );\n}\n","import MovieList from 'components/common/MovieList/MovieList';\nimport SearchForm from 'components/common/SearchForm/SearchForm';\nimport { searchMoviesCtx } from 'context/searchMoviesCtx';\nimport { useSearchMovies } from 'hooks/useTrendingApi';\nimport { useContext, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Movies() {\n  const { moviesRef } = useContext(searchMoviesCtx);\n  const location = useLocation();\n\n  const { movies, setSearch } = useSearchMovies('');\n\n  const curretnMovies = useMemo(() => {\n    if (location.state !== 'MovieDetails') {\n      moviesRef.current = movies;\n      return movies;\n    }\n    location.state = null;\n    return moviesRef.current;\n  }, [location, moviesRef, movies]);\n\n  return (\n    curretnMovies && (\n      <>\n        <h1>Movies</h1>\n        <SearchForm setSearch={setSearch} />\n        <MovieList movies={curretnMovies} />\n      </>\n    )\n  );\n}\n","import { useRef } from 'react';\n\nexport function useIsFirstRender() {\n  const isFirst = useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n\n    return true;\n  }\n\n  return isFirst.current;\n}\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nimport { useIsFirstRender } from './useFirstRender';\n\nconst API_KEY = 'f860fd14767163b7a314379672b23f90';\n\nconst themoviedb = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nexport function useTrendingApi() {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get('/trending/movie/day').then(res => {\n      setData(res.data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  return [data, loading];\n}\n\nexport function useSearchMovies(initSearch = '') {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(initSearch);\n  const isFirst = useIsFirstRender();\n\n  useEffect(() => {\n    if (isFirst.current || search === '') return;\n\n    const options = {\n      params: {\n        query: search,\n      },\n    };\n\n    setLoading(true);\n    themoviedb.get('/search/movie', options).then(res => {\n\n      setMovies(res.data.results);\n      setLoading(false);\n    });\n  }, [isFirst, search]);\n  // console.log(movies);\n\n  return { movies, setSearch, loading };\n}\n\nexport function useGetMovieDetails(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get(`/movie/${movieId}`).then(res => {\n      // console.log(res);\n      setMovie(res.data);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, movie, done };\n}\n\nexport function useGetMovieCast(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get(`/movie/${movieId}/credits`).then(res => {\n      setCast(res.data.cast);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, cast, done };\n}\n\nexport function useGetMovieReviews(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState({});\n\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n      // console.log(res.data.results);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, reviews, done };\n}\n"],"names":["MovieItem","id","title","location","useLocation","to","state","from","MovieList","movies","map","movie","SearchForm","setSearch","onSubmit","e","preventDefault","form","target","value","elements","search","trim","toLowerCase","reset","name","type","Movies","moviesRef","useContext","searchMoviesCtx","useSearchMovies","curretnMovies","useMemo","current","useIsFirstRender","isFirst","useRef","themoviedb","axios","baseURL","params","api_key","language","useTrendingApi","useState","loading","setLoading","data","setData","useEffect","get","then","res","results","initSearch","setMovies","options","query","useGetMovieDetails","movieId","setMovie","done","setDone","useGetMovieCast","cast","setCast","useGetMovieReviews","reviews","setReviews"],"sourceRoot":""}