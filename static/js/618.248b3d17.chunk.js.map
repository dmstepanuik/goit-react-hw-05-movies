{"version":3,"file":"static/js/618.248b3d17.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/MovieDetails/MovieDetails.module.scss?eef8","components/pages/MovieDetails/MovieDetails.jsx","hooks/useFirstRender.js","hooks/useTrendingApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"linkList\":\"MovieDetails_linkList__z8TrU\"};","import { useGetMovieDetails } from 'hooks/useTrendingApi';\nimport React, { useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { IMAGE_PATH } from 'variables/variables';\nimport s from './MovieDetails.module.scss';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const location = useLocation();\n  const [fromLocation] = useState(() => location?.state?.from);\n  const { loading, movie, done } = useGetMovieDetails(id);\n\n  const { title, release_date, overview, genres, poster_path, vote_average } =\n    movie;\n\n  if (!loading && !done) return null;\n  if (loading) return <h3>Loading...</h3>;\n  if (!loading && done) {\n    const imgUrl = `${IMAGE_PATH}${poster_path}`;\n    const year = release_date.slice(0, 4);\n    const headTitle = `${title} (${year})`;\n    const genresString = genres\n      .map(x => {\n        return x.name;\n      })\n      .join(', ');\n\n    return (\n      <div>\n        <Link to={fromLocation || '/'} state={'MovieDetails'}>\n          back\n        </Link>\n\n        <div>\n          <img src={imgUrl} alt=\"\" width={200} />\n        </div>\n        <h2>{headTitle}</h2>\n\n        <p>{overview}</p>\n        <p>{genresString}</p>\n        <p>{vote_average}</p>\n\n        <div className={s.linkList}>\n          <NavLink to={'cast'}>Cast</NavLink>\n          <NavLink to={'reviews'}>Reviews</NavLink>\n        </div>\n\n        <Outlet />\n      </div>\n    );\n  }\n}\n","import { useRef } from 'react';\n\nexport function useIsFirstRender() {\n  const isFirst = useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n\n    return true;\n  }\n\n  return isFirst.current;\n}\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nimport { useIsFirstRender } from './useFirstRender';\n\nconst API_KEY = 'f860fd14767163b7a314379672b23f90';\n\nconst themoviedb = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nexport function useTrendingApi() {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get('/trending/movie/day').then(res => {\n      setData(res.data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  return [data, loading];\n}\n\nexport function useSearchMovies(initSearch = '') {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(initSearch);\n  const isFirst = useIsFirstRender();\n\n  useEffect(() => {\n    if (isFirst.current || search === '') return;\n\n    const options = {\n      params: {\n        query: search,\n      },\n    };\n\n    setLoading(true);\n    themoviedb.get('/search/movie', options).then(res => {\n\n      setMovies(res.data.results);\n      setLoading(false);\n    });\n  }, [isFirst, search]);\n  // console.log(movies);\n\n  return { movies, setSearch, loading };\n}\n\nexport function useGetMovieDetails(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get(`/movie/${movieId}`).then(res => {\n      // console.log(res);\n      setMovie(res.data);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, movie, done };\n}\n\nexport function useGetMovieCast(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get(`/movie/${movieId}/credits`).then(res => {\n      setCast(res.data.cast);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, cast, done };\n}\n\nexport function useGetMovieReviews(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState({});\n\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    themoviedb.get(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n      // console.log(res.data.results);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, reviews, done };\n}\n"],"names":["MovieDetails","id","useParams","location","useLocation","useState","state","from","fromLocation","useGetMovieDetails","loading","movie","done","title","release_date","overview","genres","poster_path","vote_average","imgUrl","IMAGE_PATH","year","slice","headTitle","genresString","map","x","name","join","to","src","alt","width","className","s","useIsFirstRender","isFirst","useRef","current","themoviedb","axios","baseURL","params","api_key","language","useTrendingApi","setLoading","data","setData","useEffect","get","then","res","results","useSearchMovies","initSearch","movies","setMovies","search","setSearch","options","query","movieId","setMovie","setDone","useGetMovieCast","cast","setCast","useGetMovieReviews","reviews","setReviews"],"sourceRoot":""}